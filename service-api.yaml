openapi: 3.0.3
info:
  title: Service APIs Orchestrator
  description: REST API for managing service orchestration processes
  version: 1.0.0
servers:
  - url: /
    description: Base URL for all endpoints

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-Api-Key
      description: API key for authentication

  schemas:
    DataEntry:
      type: object
      required:
        - type
        - counterPartyAddress
        - contractId
        - connectorId
      properties:
        type:
          type: string
          enum: ["edc-asset"]
        counterPartyAddress:
          type: string
        contractId:
          type: string
        connectorId:
          type: string

    Service:
      type: object
      required:
        - counterPartyAddress
        - contractId
        - connectorId
      properties:
        counterPartyAddress:
          type: string
        contractId:
          type: string
        connectorId:
          type: string

    CombinedTransferRequest:
      type: object
      required:
        - service
        - data
        - connectorAddress
      properties:
        service:
          $ref: '#/components/schemas/Service'
        data:
          type: array
          items:
            $ref: '#/components/schemas/DataEntry'
        connectorAddress:
          type: string

    TransferProcessResponse:
      type: object
      properties:
        status:
          type: string
          enum: ["SUCCESS"]
        status_code:
          type: integer
        orchestration_id:
          type: string
          format: uuid
        workflow:
          type: object

    OrchestrationProcess:
      type: object
      properties:
        orchestration_id:
          type: string
          format: uuid
        process_status:
          type: string
        type:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    OrchestrationStatusResponse:
      type: object
      properties:
        status:
          type: string
          enum: ["SUCCESS"]
        status_code:
          type: integer
        workflow:
          type: object

    ErrorResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum: ["ERROR"]
        status_code:
          type: integer
        details:
          type: object

paths:
  /orchestrator/orchestrate:
    post:
      summary: Initiate combined service/data transfer
      security:
        - ApiKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CombinedTransferRequest'
      responses:
        '200':
          description: Transfer initiated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferProcessResponse'
        '400':
          $ref: '#/components/responses/400Error'
        '401':
          $ref: '#/components/responses/401Error'
        '403':
          $ref: '#/components/responses/403Error'
        '500':
          $ref: '#/components/responses/500Error'

  /orchestrator/status:
    get:
      summary: Get all orchestration statuses
      security:
        - ApiKeyAuth: []
      responses:
        '200':
          description: Status retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrchestrationStatusResponse'
        '500':
          $ref: '#/components/responses/500Error'

  /orchestrator/status/{orchestrationId}:
    get:
      summary: Get detailed orchestration status
      security:
        - ApiKeyAuth: []
      parameters:
        - name: orchestrationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: clientIp
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Detailed status retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrchestrationStatusResponse'
        '404':
          $ref: '#/components/responses/404Error'
        '500':
          $ref: '#/components/responses/500Error'

  /health:
    get:
      summary: Service health check
      responses:
        '200':
          description: Service healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "healthy"

security:
  - ApiKeyAuth: []
